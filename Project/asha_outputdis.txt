mov rax,QWORD PTR [rdx+r11*8+0x12]
mov QWORD PTR [rdx+r11*8+0x12],rcx
mov QWORD PTR [rdx+r11*1+0x12],rcx
adc r11,r12
add WORD PTR [eax],si
sub r11w,r15w
sub r12d,DWORD PTR [r13d+0x00]
mov rax,QWORD PTR [rdx+r11*8+0x12]
mov r13d,0x00000123
and ecx,esi
inc rcx
dec r14d
xor ax,dx
cmp rcx,0x00000123
test rdi,rsi
mov rax,QWORD PTR [rdx+r11*8+0x12]
mov ax,WORD PTR [eax]
xadd ax,bx
xchg bl,al
idiv rcx
imul rcx
mov rax,QWORD PTR [rdx+r11*8+0x12]
bsr r14d,r15d
clc
stc
std
mov rax,QWORD PTR [rdx+r11*8+0x12]
mov rax,QWORD PTR [rdx+r11*8+0x12]
neg DWORD PTR [rcx]
dec r11
idiv QWORD PTR [edx+r11d*1]
idiv QWORD PTR [ebp+r11d*1+0x00]
idiv DWORD PTR [r11d+ebp*1]
imul r11
imul QWORD PTR [ebp+r11d*1+0x00]
idiv QWORD PTR [r11d*1+0x00000123]
neg r13d
neg BYTE PTR [edx+esi*8]
not bh
shl rax,1
shl DWORD PTR [rax+0x01],1
shl WORD PTR [rax+0x01],0x2301
shr rax,1
shr BYTE PTR [rax+0x01],0x3401
shr BYTE PTR [rbp+0x01],0x3401
shr BYTE PTR [rax+0x00000123],0x3400000123
mov rax,QWORD PTR [rdx+r11*8+0x12]
mov rax,QWORD PTR [rdx+r11*8+0x12]
pop rax
pop r11w
push rcx
pop rcx
pop rdi
push rsi
shl BYTE PTR [rbx],0x01
shl ,0x01
mov rax,QWORD PTR [rdx+r11*8+0x12]
mov rax,QWORD PTR [rdx+r11*8+0x12]
inc QWORD PTR [rbp+rax*1+0x00000123]
